<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tic Tac Toe</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            height: 100vh;
            margin: 0;
            background: url(/Leonardo_Anime_XL_better_graphics_in_anime_style_1.jpg);
            background-position: center;
            background-repeat: no-repeat;
            background-size: cover;
        }
        .board {
            display: grid;
            grid-template-columns: repeat(3, 100px);
            grid-template-rows: repeat(3, 100px);
            gap: 5px;
        }
        .cell {
            width: 100px;
            height: 100px;
            display: flex;
            justify-content: center;
            align-items: center;
            background-color: #fff;
            border: 2px solid #000;
            font-size: 2rem;
            cursor: pointer;
            border-radius: 50px;
        }
        .cell.taken {
            pointer-events: none;
            color: #666;
        }
        .message {
            margin-top: 20px;
            font-size: 1.5rem;
            color: #ff0000;
            font-weight: bold;
            text-align: center;
        }
        .btn button{
            border-radius: 10px;
            width: 170px;
            height: 30px;
            border: 0px;
            color: #fff;
            background: #000;
        }
        
        .btn button:active{
            color: #000;
            background: #fff;
        }
        @media (max-width: 480px) {
            .cell{
                width: 80px;
                height: 80px;
                margin-left: 10px;
            }
            .btn button{
                margin-top: 20px;
                margin-left: 60px;
                align-items: center;
            }
        }
    </style>
</head>
<body>
    <div>
        <div class="board" id="board"></div>
        <div class="message" id="message"></div>
        <div class="btn">
            <button class="button" id="resetBtn">Reset Game</button>
            <button class="button" id="exitBtn">Exit</button>
        </div>
    </div>

    <script>
        const boardElement = document.getElementById('board');
        const messageElement = document.getElementById('message');
        const resetButton = document.getElementById('resetBtn');
        const exitButton = document.getElementById('exitBtn');

        let board = Array(9).fill(null);
        let currentPlayer = 'X';

        // Winning combinations
        const winningCombinations = [
            [0, 1, 2], [3, 4, 5], [6, 7, 8],
            [0, 3, 6], [1, 4, 7], [2, 5, 8],
            [0, 4, 8], [2, 4, 6]
        ];

        // Initialize board
        function initializeBoard() {
            boardElement.innerHTML = '';
            board.forEach((_, index) => {
                const cell = document.createElement('div');
                cell.classList.add('cell');
                cell.dataset.index = index;
                cell.addEventListener('click', handlePlayerMove);
                boardElement.appendChild(cell);
            });
            messageElement.textContent = '';
        }

        // Check for winner
        function checkWinner(player) {
            return winningCombinations.some(combination => 
                combination.every(index => board[index] === player)
            );
        }

        // Check for draw
        function isDraw() {
            return board.every(cell => cell !== null);
        }

        // Handle player move
        function handlePlayerMove(event) {
            const index = event.target.dataset.index;

            if (!board[index]) {
                board[index] = currentPlayer;
                event.target.textContent = currentPlayer;
                event.target.classList.add('taken');

                if (checkWinner(currentPlayer)) {
                    messageElement.textContent = `${currentPlayer} wins!`;
                    endGame();
                } else if (isDraw()) {
                    messageElement.textContent = `It's a draw!`;
                    endGame();
                } else {
                    currentPlayer = currentPlayer === 'X' ? 'O' : 'X';
                    if (currentPlayer === 'O') {
                        computerMove();
                    }
                }
            }
        }

        // Computer makes a random move
        function computerMove() {
            let availableMoves = board.map((cell, index) => cell === null ? index : null).filter(index => index !== null);
            const randomIndex = availableMoves[Math.floor(Math.random() * availableMoves.length)];

            board[randomIndex] = 'O';
            const cell = document.querySelector(`.cell[data-index='${randomIndex}']`);
            cell.textContent = 'O';
            cell.classList.add('taken');

            if (checkWinner('O')) {
                messageElement.textContent = `O wins!`;
                endGame();
            } else if (isDraw()) {
                messageElement.textContent = `It's a draw!`;
                endGame();
            } else {
                currentPlayer = 'X';
            }
        }

        // End game
        function endGame() {
            document.querySelectorAll('.cell').forEach(cell => cell.removeEventListener('click', handlePlayerMove));
        }

        // Reset game
        resetButton.addEventListener('click', () => {
            board = Array(9).fill(null);
            currentPlayer = 'X';
            initializeBoard();
        });

        // Exit to main page
        exitButton.addEventListener('click', () => {
            window.location.href = 'index.html'; // Replace with the actual main page URL
        });

        initializeBoard();
    </script>
</body>
</html>
